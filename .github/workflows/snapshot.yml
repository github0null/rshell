# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Wheel Package

on:
  push:
    branches:
      - dev
    paths:
      - "rshell/**"
    tags:
      - snapshot**

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
        pip install wheel

# GITSHA=${{ github.sha }} && export OUTNAME=`echo $ORGNAME | sed "s/.whl/-commit-${GITSHA:0:8}.whl/"`
# mv -v dist/$ORGNAME dist/$OUTNAME
# echo "DIST_NAME=$OUTNAME" >> "$GITHUB_ENV"
    - name: Make wheel
      run: |
        python setup.py bdist_wheel
        export OUTNAME=`ls dist | xargs`
        echo "DIST_NAME=$OUTNAME" >> "$GITHUB_ENV"

    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.DIST_NAME }}
        path: dist/*.whl

    - name: Publish Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: Snapshot ${{ env.DIST_NAME }}
        files: dist/*.whl